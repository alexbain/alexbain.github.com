<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ez430 | alexba.in]]></title>
  <link href="http://alexba.in/blog/categories/ez430/atom.xml" rel="self"/>
  <link href="http://alexba.in/"/>
  <updated>2015-01-26T16:11:20+00:00</updated>
  <id>http://alexba.in/</id>
  <author>
    <name><![CDATA[Alex Bain]]></name>
    <email><![CDATA[alex@alexba.in]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Adventures with Microprocessors]]></title>
    <link href="http://alexba.in/blog/2012/02/03/adventures-with-microprocessors/"/>
    <updated>2012-02-03T08:17:00+00:00</updated>
    <id>http://alexba.in/blog/2012/02/03/adventures-with-microprocessors</id>
    <content type="html"><![CDATA[<p>I've always been fascinated by embedded systems but haven't taken the time
to dive into them or hack on 'em. Over the past few weeks, however, the <a href="http://arduino.cc/" title="Arduino">Arduino</a>
platform caught my eye and I've started reading about it and understanding
what it's capable of.</p>

<p>My verdict? It seems like the perfect introductory platform to start measureing
sensor data. So, last night I took the plunge and purchased the <a href="http://www.sparkfun.com/products/10173" title="Sparkfun Inventor's Kit">Inventor's Kit</a>
from <a href="http://www.sparkfun.com/" title="Sparkfun electronics">Sparkfun electronics</a>. It should arrive next week (right before I
leave for France!). I'll take some unboxing shots when it arrives. I can't
wait to experiment with it and start hacking together some novel ideas. I plan
to post all of the code I write in a GitHub repo for others to grab and run with.</p>

<p>However, to get my feet wet, I busted out a <a href="https://estore.ti.com/eZ430-Chronos-433-eZ430-Chronos-Wireless-Watch-Development-Tool-P1734.aspx" title="TI eZ430 Chronos">TI eZ430 Chronos watch</a> that my
good friend Jeff gave me a while back and started playing around with it's
default firmware. I'm not able to do anything too exciting yet, since I don't
have the firmware reprogrammer, but I was able to capture some of the button
events from the watch and route them out to <a href="http://pusher.com" title="Pusher">Pusher.com</a>, a free WebSockets
API.</p>

<p>The next step is to write a Chrome extension that watches for those WebSockets
events and does something interesting. I've got a few ideas and I'll post about
them here once it's up and running.</p>

<p>If you're curious, check out the <a href="https://github.com/alexbain/TI-Chronos-eZ430-to-WebSockets" title="TI eZ430 -&gt; WebSockets">Ruby script</a> that gets the watch talking
with <a href="http://pusher.com" title="Pusher">Pusher.com</a>.</p>
]]></content>
  </entry>
  
</feed>
